{"version":3,"sources":["Filters.js","ProductRow.js","ProductTable.js","ProductForm.js","Products.js","App.js","serviceWorker.js","index.js"],"names":["Filters","props","handleChange","bind","e","value","target","name","this","onFilter","type","className","placeholder","onChange","Component","ProductRow","destroy","edit","onEdit","product","id","onDestroy","category","price","instock","onClick","ProductTable","handleEdit","handleDestroy","productsArr","products","rows","forEach","indexOf","filterText","push","key","RESET_VALUES","productid","ProductForm","handleSave","handleReset","state","Object","assign","errors","setState","prevState","preventDefault","onSave","onSubmit","checked","PRODUCTS","Products","currProduct","handleFilter","getProducts","fetch","then","res","json","success","alert","message","data","filterInput","body","JSON","stringify","method","headers","catch","err","console","error","productId","find","p","App","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.bef8246c.chunk.js","sourcesContent":["import React, { Component } from 'react'\n\nclass Filters extends Component {\n    constructor(props) {\n        super(props)\n        this.handleChange = this.handleChange.bind(this)\n    }\n\n    handleChange(e) {\n        const value = e.target.value\n        const name = e.target.name\n\n        this.props.onFilter({\n            [name]: value\n        })\n    }\n\n    render () {\n        return (\n            <form>\n                <input \n                    type=\"text\" \n                    className=\"form-control\" \n                    placeholder=\"Search...\" \n                    name=\"filterText\" \n                    onChange={this.handleChange}></input>\n            </form>\n        )\n    }\n}\n\nexport default Filters","import React, { Component } from 'react'\n\nclass ProductRow extends Component {\n\tconstructor(props) {\n\t\tsuper(props)\n\t\tthis.destroy = this.destroy.bind(this)\n\t\tthis.edit = this.edit.bind(this)\n\t}\n\n\tedit() {\n\t\tthis.props.onEdit(this.props.product.id);\n\t}\n\n\tdestroy() {\n\t\tthis.props.onDestroy(this.props.product.id);\n\t}\n\n\trender() {\n\t\tconst { product } = this.props.product;\n\t\treturn (\n\t\t\t<tr>\n\t\t\t\t<td>{product.name}</td>\n\t\t\t\t<td>{product.category}</td>\n\t\t\t\t<td>{product.price}</td>\n\t\t\t\t<td>{(product.instock) ? \"Yes\" : \"No\"}</td>\n\t\t\t\t<td className=\"text-right\">\n\t\t\t\t\t<button onClick={this.edit} className=\"btn btn-primary\">Modify</button>\n\t\t\t\t\t<button onClick={this.destroy} className=\"btn btn-danger\">Delete</button>\n\t\t\t\t</td>\n\t\t\t</tr>\n\t\t)\n\t}\n}\n\nexport default ProductRow","import React, { Component } from 'react'\nimport ProductRow from './ProductRow'\n\nclass ProductTable extends Component {\n    constructor(props) {\n        super(props)\n        this.handleEdit = this.handleEdit.bind(this)\n        this.handleDestroy = this.handleDestroy.bind(this)\n    }\n\n    handleEdit(id) {\n        this.props.onEdit(id)\n    }\n\n    handleDestroy(id) {\n        this.props.onDestroy(id)\n    }\n    \n    render () {\n        let productsArr = this.props.products;\n        let rows = []\n\n        productsArr.forEach((product) => {\n            if (product.product.name.indexOf(this.props.filterText) === -1) {\n                return\n            }\n            rows.push (\n                <ProductRow \n                    product={product} key={product.id} onEdit={this.handleEdit} onDestroy={this.handleDestroy}></ProductRow>\n            )\n        })\n\n        return (\n            <div>\n                <table className=\"table table-striped table-sm\">\n                    <thead className=\"thead-dark\">\n                        <tr>\n                            <th>Name</th>\n                            <th>Category</th>\n                            <th>Price</th>\n                            <th>Instock</th>\n                            <th>&nbsp;</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        {rows}\n                    </tbody>\n                </table>\n            </div>\n        )\n    }\n}\n\nexport default ProductTable","import React, { Component } from 'react'\n\nconst RESET_VALUES = { productid: null, category: '', price: '', name: '', instock: null }\n\nclass ProductForm extends Component {\n\tconstructor(props) {\n\t\tsuper(props)\n\t\tthis.handleChange = this.handleChange.bind(this)\n\t\tthis.handleSave = this.handleSave.bind(this)\n\t\tthis.handleReset = this.handleReset.bind(this)\n\t\tthis.state = {\n\t\t\tproduct: (this.props.product && this.props.product.product) || Object.assign({}, RESET_VALUES),\n\t\t\terrors: {}\n\t\t}\t\n\t}\n\n\thandleChange(e) {\n\t\tconst target = e.target\n\t\tconst name = target.name\n\t\tconst value = (name === \"instock\") ? (target.value === \"true\") : target.value\n\t\t\n\n\t\tthis.setState((prevState) => {\n\t\t\tprevState.product[name] = value\n\t\t\treturn { product: prevState.product }\n\t\t})\n\t}\n\n\thandleSave(e) {\n\t\te.preventDefault();\n\t\tthis.props.onSave(this.state.product);\n\t\tthis.handleReset();\n\t}\n\n\thandleReset() {\n\t\tthis.setState({\n\t\t\tproduct: Object.assign({}, RESET_VALUES)\n\t\t})\n\t}\n\n\trender() {\n\t\n\t\treturn (\n\t\t\t<form onSubmit={this.handleSave}>\n\t\t\t\t<h4>Add a new product</h4>\n\t\t\t\t<p>\n\t\t\t\t\t<label>Name <br />\n\t\t\t\t\t\t<input type=\"text\" className=\"form-control\" name=\"name\" onChange={this.handleChange} value={this.state.product.name}  />\n\t\t\t\t\t</label>\n\t\t\t\t</p>\n\t\t\t\t<p>\n\t\t\t\t\t<label>Category <br />\n\t\t\t\t\t\t<input type=\"text\" className=\"form-control\" name=\"category\" onChange={this.handleChange} value={this.state.product.category}  />\n\t\t\t\t\t</label>\n\t\t\t\t</p>\n\t\t\t\t<p>\n\t\t\t\t\t<label>Price <br />\n\t\t\t\t\t\t<input type=\"number\" className=\"form-control\" name=\"price\" onChange={this.handleChange} value={this.state.product.price}  />\n\t\t\t\t\t</label>\n\t\t\t\t</p>\n\t\t\t\t\n\t\t\t\t\tIn stock <br />\n\t\t\t\t\t<div className=\"form-check\">\n\t\t\t\t\t\t<input className=\"form-check-input\" type=\"radio\" name=\"instock\" id=\"yes\" onChange={this.handleChange} value=\"true\" checked={(this.state.product.instock === true)}  />\n\t\t\t\t\t\t<label className=\"form-check-label\">In Stock</label>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\"form-check\">\n\t\t\t\t\t\t<input className=\"form-check-input\" type=\"radio\" name=\"instock\" id=\"no\" onChange={this.handleChange} value=\"false\" checked={(this.state.product.instock === false)}  />\n\t\t\t\t\t\t<label className=\"form-check-label\">Out Of Stock</label>\n\t\t\t\t\t</div>\n\t\t\t\t\n\t\t\t\t<input type=\"submit\" className=\"btn btn-primary mr-2\" value=\"Save\"></input>\n\t\t\t\t<input type=\"reset\" onClick={this.handleReset} className=\"btn btn-danger\" value=\"Clear\"></input>\n\t\t\t</form>\n\t\t)\n\t}\n}\n\nexport default ProductForm","import React, { Component } from 'react'\nimport Filters from './Filters'\nimport ProductTable from './ProductTable'\nimport ProductForm from './ProductForm'\n\nlet PRODUCTS = [];\n\n\n\nclass Products extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            filterText: '',\n\t\t\tproducts: PRODUCTS,\n\t\t\tcurrProduct: null\n        }\n        this.handleFilter = this.handleFilter.bind(this)\n        this.handleEdit = this.handleEdit.bind(this)\n        this.handleDestroy = this.handleDestroy.bind(this)\n        this.handleSave = this.handleSave.bind(this)\n\t}\n\t\n\tcomponentDidMount() { this.getProducts() }\n\n\tgetProducts() {\n\t\tfetch( \"/products/get\")\n\t\t.then((res) => res.json())\n\t\t.then((res) => {\n\t\t\tif (res.success === 0) \n\t\t\treturn alert(res.message);\n\t\t\tthis.setState({ products: res.data })\n\t\t})\n\t}\n\n    handleFilter(filterInput) {\n        this.setState(filterInput)\n    }\n\n    handleSave(product) {\n\t\tif (product.productid != null) {\n\t\t\t\n\n\t\t\tfetch(\"/products/update/\" + product.productid, {\n\t\t\t\tbody: JSON.stringify(product),\n\t\t\t\tmethod: \"POST\",\n\t\t\t\theaders: {'Content-Type': 'application/json'}\n\t\t\t})\n\t\t\t.then(res => res.json())\n\t\t\t.then((res) => {\n\t\t\t\tif(res.success === 0) \n\t\t\t\treturn alert(res.message);\n\t\t\t\tthis.getProducts();\n\t\t\t})\n\t\t\t.catch(err => console.error(err))\n\t\t} else {\n\t\t\t\n\n\t\t\tfetch(\"/products/create\", {\n\t\t\t\tbody: JSON.stringify(product),\n\t\t\t\tmethod: \"POST\",\n\t\t\t\theaders: {'Content-Type': 'application/json'}\n\t\t\t})\n\t\t\t.then(res => res.json())\n\t\t\t.then((res) => {\n\t\t\t\tif(res.success === 0) \n\t\t\t\treturn alert(res.message);\n\t\t\t\tthis.getProducts();\n\t\t\t})\n\t\t\t.catch(err => console.error(err))\n\t\t}\n    }\n\n\thandleEdit(productId) {\n\t\tlet currProduct = this.state.products.find(p => p.id === productId);\n\t\tthis.setState({\n\t\t\tcurrProduct: currProduct\n\t\t})\n\t}\n\n    handleDestroy(productId) {\n\t\tfetch(\"/products/delete/\" + productId)\n\t\t.then((res) => res.json())\n\t\t.then((res) => {\n\t\t\tif (res.success === 0) \n\t\t\treturn alert(res.message);\n\t\t\tthis.getProducts();\n\t\t})\n    }\n\n    render () {\n        return (\n            <div>\n                <h1>My Inventory</h1>\n                <Filters \n                    onFilter={this.handleFilter}></Filters>\n\t\t\t\t<ProductTable \n\t\t\t\t\tfilterText={this.state.filterText}\n                    products={this.state.products}\n\t\t\t\t\tonDestroy={this.handleDestroy}\n                    onEdit={this.handleEdit}\n                   ></ProductTable>\n                <ProductForm\n\t\t\t\t\tkey={JSON.stringify(this.state.currProduct)}\n\t\t\t\t\tonSave={this.handleSave}\n\t\t\t\t\tproduct={this.state.currProduct}></ProductForm>\n            </div>\n        )\n    }\n}\n\nexport default Products","import React from 'react';\nimport Products from './Products'\n\nfunction App() {\n  return (\n    <div>\n      <Products></Products>\n    </div>\n  );\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}